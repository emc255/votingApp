{"version":3,"sources":["components/Title.js","components/Body.js","App.js","index.js"],"names":["Title","className","Body","props","sortedArr","datas","sort","a","b","vote","map","data","index","key","dataId","src","img","alt","data-id","onClick","e","getVote","target","dataset","id","href","atag","name","dateRelease","userImage","App","useState","setDatas","useEffect","fetch","then","res","json","resDatas","Math","floor","random","catch","err","console","log","newData","filter","parseInt","updateDatas","ReactDOM","render","document","getElementById"],"mappings":"2QAUeA,MARf,WACE,OACE,yBAAKC,UAAU,UACb,oDCkCSC,MArCf,SAAcC,GACZ,IAAMC,EAAY,YAAID,EAAME,OAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,KAAOF,EAAEE,QAE7D,OACE,yBAAKR,UAAU,wBACZG,EAAUM,KAAI,SAACC,EAAMC,GAAP,OACb,yBAAKX,UAAU,iBAAiBY,IAAKF,EAAKG,QACxC,yBAAKb,UAAU,4BACb,uBAAGA,UAAU,kBAAkBW,EAAQ,IAEzC,yBAAKX,UAAU,SAASc,IAAKJ,EAAKK,IAAKC,IAAI,UAC3C,yBAAKhB,UAAU,wBACb,uBAAGA,UAAU,2BAA2BU,EAAKF,KAA7C,UACA,4BACER,UAAU,0BACViB,UAASP,EAAKG,OACdK,QAAS,SAAAC,GAAC,OAAIjB,EAAMkB,QAAQD,EAAEE,OAAOC,QAAQC,MAH/C,QAOA,uBAAGvB,UAAU,2BACX,uBAAGA,UAAU,OAAOwB,KAAMd,EAAKe,MAC5Bf,EAAKgB,OAGV,uBAAG1B,UAAU,2BAA2BU,EAAKiB,aAC7C,uBAAG3B,UAAU,2BAAb,iBACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,uCAAuCc,IAAKJ,EAAKkB,UAAWZ,IAAI,kB,MCmB9Ea,MA5Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACN1B,EADM,KACC2B,EADD,KAoCb,OAjCAC,qBAAU,WACRC,MAAM,cACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJA,EAAS5B,KAAI,SAAAC,GAAI,OAAKA,EAAKF,KAAO8B,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,OAClET,EAASM,MAEVI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IA0BD,yBAAK1C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMI,MAAOA,EAAOgB,QA1BR,SAAAZ,GACd,IAAIqC,EAAU,GAEdzC,EAAM0C,QAAO,SAAApC,GACPA,EAAKG,SAAWkC,SAASvC,KAC3BE,EAAKF,MAAQ,EACbqC,EAAU,CACRhC,OAAQH,EAAKG,OACbe,UAAWlB,EAAKkB,UAChBF,KAAMhB,EAAKgB,KACXC,YAAajB,EAAKiB,YAClBZ,IAAKL,EAAKK,IACVP,KAAME,EAAKF,KACXiB,KAAMf,EAAKe,UAKjB,IAAMuB,EAAc5C,EAAM0C,QAAO,SAAApC,GAAI,OAAIA,EAAKG,SAAWkC,SAASvC,MAElEuB,EAAS,GAAD,mBAAKiB,GAAL,CAAkBH,UCjC9BI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0c247983.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Title() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>VOTE THE PRETTIEST</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\n\r\nfunction Body(props) {\r\n  const sortedArr = [...props.datas].sort((a, b) => b.vote - a.vote);\r\n\r\n  return (\r\n    <div className=\"outer-main-container\">\r\n      {sortedArr.map((data, index) => (\r\n        <div className=\"main-container\" key={data.dataId}>\r\n          <div className=\"ranking-number-container\">\r\n            <p className=\"ranking-number\">{index + 1}</p>\r\n          </div>\r\n          <img className=\"poster\" src={data.img} alt=\"kitty\" />\r\n          <div className=\"main-inner-container\">\r\n            <p className=\"inner-container-content\">{data.vote} Votes</p>\r\n            <button\r\n              className=\"inner-container-content\"\r\n              data-id={data.dataId}\r\n              onClick={e => props.getVote(e.target.dataset.id)}\r\n            >\r\n              vote\r\n            </button>\r\n            <p className=\"inner-container-content\">\r\n              <a className=\"atag\" href={data.atag}>\r\n                {data.name}\r\n              </a>\r\n            </p>\r\n            <p className=\"inner-container-content\">{data.dateRelease}</p>\r\n            <p className=\"inner-container-content\">Submitted by:</p>\r\n            <div className=\"uploader-img-container\">\r\n              <img className=\"uploader-img inner-container-content\" src={data.userImage} alt=\"kitty\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { useState, useEffect } from \"react\";\nimport Title from \"./components/Title\";\nimport Body from \"./components/Body\";\nimport \"./App.css\";\n\nfunction App() {\n  const [datas, setDatas] = useState([]);\n\n  useEffect(() => {\n    fetch(\"datas.json\")\n      .then(res => res.json())\n      .then(resDatas => {\n        resDatas.map(data => (data.vote = Math.floor(Math.random() * 50 + 15)));\n        setDatas(resDatas);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  const getVote = vote => {\n    let newData = {};\n\n    datas.filter(data => {\n      if (data.dataId === parseInt(vote)) {\n        data.vote += 1;\n        newData = {\n          dataId: data.dataId,\n          userImage: data.userImage,\n          name: data.name,\n          dateRelease: data.dateRelease,\n          img: data.img,\n          vote: data.vote,\n          atag: data.atag\n        };\n      }\n    });\n\n    const updateDatas = datas.filter(data => data.dataId !== parseInt(vote));\n\n    setDatas([...updateDatas, newData]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <Body datas={datas} getVote={getVote} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}